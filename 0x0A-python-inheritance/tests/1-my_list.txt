The `1-my_list` module
=======================================

Using `1-my_list`
---------------------------------------

Import method from module:
    >>> MyList = __import__('1-my_list').MyList

correct class type test:
    >>> class_instance = MyList()
    >>> type(class_instance) == MyList
    True

correct instance test:
    >>> class_instance = MyList()
    >>> isinstance(class_instance, list)
    True

print_sorted method is an instance method:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

print_sorted called via class without args:
    >>> class_instance.__class__.print_sorted()
    Traceback (most recent call last):
        ...
    TypeError: print_sorted() missing 1 required positional argument: 'self'
    
Empty list test:
    >>> ml = MyList()
    >>> ml.print_sorted()
    []

Correct list test:
    >>> ml = MyList([2 ,1, 3])
    >>> ml.print_sorted()
    [1, 2, 3]

Negative list test:
    >>> ml = MyList([0, -3, -21, 43])
    >>> ml.print_sorted()
    [-21, -3, 0, 43]

Original list unchange:
    >>> ml = MyList([0, -3, -21, 43])
    >>> ml.print_sorted()
    [-21, -3, 0, 43]
    >>> ml
    [0, -3, -21, 43]

Test append:
    >>> ml = MyList()
    >>> ml.append(10)
    >>> ml
    [10]
